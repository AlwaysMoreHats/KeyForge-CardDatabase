buildscript {
	ext {
		kotlinVersion = '1.2.60'
		springBootVersion = '2.0.5.RELEASE'
		serialization_version = '0.6.1'
	}
	repositories {
		jcenter()
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1')
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.palantir.docker'

group = 'billmcintyre'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	jcenter()
	maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {
	// Kotlin Dependencies
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

	// Spring Dependencies
	compile("org.springframework.boot:spring-boot-starter-web")
	compile "org.springframework.boot:spring-boot-starter-jetty"
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.springframework.data:spring-data-jpa"
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile('org.springframework.boot:spring-boot-starter-webflux')
	testCompile('io.projectreactor:reactor-test')
	compile 'org.springframework:spring-context-support:4.1.5.RELEASE'
	compile("org.springframework.boot:spring-boot-starter-cache")

	// Hibernate Dependencies
	compile "org.hibernate:hibernate-core:5.2.15.Final"
	testCompile "org.hibernate:hibernate-testing:5.2.15.Final"
	testCompile "com.h2database:h2:1.4.196"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.30"
	runtime "mysql:mysql-connector-java"

	// Jackson Dependencies
	compile "com.fasterxml.jackson.core:jackson-annotations"
	compile "com.fasterxml.jackson.core:jackson-core"
	compile "com.fasterxml.jackson.core:jackson-databind"
	runtime "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7"

	compile "org.modelmapper:modelmapper:0.7.4"

	compile("au.com.console:kotlin-jpa-specification-dsl:1.0.0")
	compile 'net.sf.ehcache:ehcache-core:2.6.10'

	// Gson Dependencies
	compile "com.google.code.gson:gson:2.8.0"
}

bootJar {
	baseName = 'library-access-service'
	version =  '0.1.6'
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${bootJar.baseName}:${bootJar.version}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}
